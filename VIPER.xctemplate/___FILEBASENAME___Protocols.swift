//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Aashish Adhikari @asisadh
//  http://aashishadhikari.com.np
//

import Foundation
import UIKit

protocol ___VARIABLE_MODULENAME___Protocol: class {
    var presenter: ___VARIABLE_MODULENAME___PresenterProtocol? { get set }
    
    // Presenter -> View
    func showError(message: String)
    func showLoading()
    func hideLoading()
}

protocol ___VARIABLE_MODULENAME___PresenterProtocol: class {
    var view: ___VARIABLE_MODULENAME___Protocol? { get set }
    var interactor: ___VARIABLE_MODULENAME___InteractorInputProtocol? { get set }
    var wireFrame: ___VARIABLE_MODULENAME___WireFrameProtocol? { get set }
    
    // View -> Presenter
    func viewDidLoad()
}

protocol ___VARIABLE_MODULENAME___InteractorInputProtocol: class {
    var presenter: ___VARIABLE_MODULENAME___InteractorOutputProtocol? { get set }
    var remoteDataManager: ___VARIABLE_MODULENAME___DataManagerInputProtocol? { get set }
    
    // Presenter -> Intreactor
}

protocol ___VARIABLE_MODULENAME___InteractorOutputProtocol: class {
   
    // Interactor -> Presenter
    func onError(message: String)
}

protocol ___VARIABLE_MODULENAME___WireFrameProtocol: class {
    static func create___VARIABLE_MODULENAME___Model() -> UIViewController
    
    // Presenter -> WireFrame
}

protocol ___VARIABLE_MODULENAME___DataManagerInputProtocol: class {
    var remoteRequestHandler: ___VARIABLE_MODULENAME___DataManagerOutPutProtocol? { get set }
    
    // Interactor -> RemoteDataManager
}

protocol ___VARIABLE_MODULENAME___DataManagerOutPutProtocol: class {
    // Remote Data Manager -> Intractor
    func onError(message: String)
}
